@page "/statistics"
@using CaffeTipping.DbServices.Dtos
@using CaffeTipping.DbServices.Services
@attribute [StreamRendering]

<PageTitle>Statistics</PageTitle>

<h1>Statistics</h1>

<table class="table">
    <thead>
    <tr>
        <th>Total amount</th>
        <th>Avg perc tips</th>
        <th>Avg rating</th>
    </tr>
    </thead>
    <tbody>

    <tr>
        <td>@_statisticsDto.TotalTips Czk</td>
        <td>@Convert.ToInt32(_statisticsDto.AverageTipPerc) %</td>
        <td>@_statisticsDto.AverageRating</td>
    </tr>
    </tbody>
</table>

@if (_orderTipDto is not null)
{
    <h1>Highest tip of the day</h1>

    <table class="table">
        <thead>
        <tr>
            <th>Total amount</th>
            <th>tip</th>
            <th>tip perc</th>
            <th>time</th>
        </tr>
        </thead>
        <tbody>

        <tr>
            <td>@(_orderTipDto.Bill + _orderTipDto.Tip)</td>
            <td>@_orderTipDto.Tip Czk</td>
            <td>@Convert.ToInt32(_orderTipDto.Tip * 100 /_orderTipDto.Bill) %</td>
            <td>@_orderTipDto.Date</td>
        </tr>
        </tbody>
    </table>
}
else
{
    <h1>Highest tip of the day - not yet</h1>
}

@code {

    [Inject]
    public IOrderTipService OrderTipService { get; set; } = null!;

    [Inject]
    public IStatisticsService StatisticsService { get; set; } = null!;

    private StatisticsDto _statisticsDto;
    private OrderTipDto? _orderTipDto;

    protected override async Task OnInitializedAsync()
    {
        _statisticsDto = await StatisticsService.GetLatestAsync();
        _orderTipDto = await OrderTipService.GetOrderTip(_statisticsDto.HighestTipOfDay);
    }

}